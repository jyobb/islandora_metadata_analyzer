<?php

/**
 * @file
 * Hook implementations.
 */

/**
 * Implements hook_init().
 * Add ajax and javascript
 */
function islandora_metadata_analyzer_init(){
  drupal_add_js('misc/jquery.form.js');
  drupal_add_library('system', 'drupal.ajax');
}

/**
 * Implements hook_menu().
 */
function islandora_metadata_analyzer_menu() {
  $items = array();

  $items['metadata_analyzer'] = array(
    'title' => 'Islandora Metadata Analyzer',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_metadata_analyzer_form'),
    'access arguments' => array('administer site configuration'),
    'expanded' => TRUE,
    'type' => MENU_NORMAL_ITEM,
  );
  $items['metadata_analyzer/results'] = array(
    'title' => 'Metadata Analysis Results',
    'page callback' => 'islandora_metadata_analyzer_results',
    'file' => 'includes/analyzerViews.inc',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
  $items['metadata_analyzer/deleteResult'] = array(
    'title' => 'Remove Metadata Analysis Results',
    'page callback' => 'islandora_metadata_analyzer_delete_result',
    'file' => 'includes/analyzer.inc',
    'page arguements' => array(1),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
/*
  $items['metadata_analyzer/searchReplace'] = array(
    'title' => 'Islandora Metadata Search Replace',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('islandora_metadata_analyzer_search_replace_form'),
    'access arguments' => array('administer site configuration'),
    'type' => MENU_NORMAL_ITEM,
  );
*/
  $items['metadata_analyzer/elementCount'] = array(
    'title' => 'Collection Element Analysis Results',
    'page callback' => 'islandora_metadata_analyzer_element_counts',
    'page arguements' => array(1),
    'file' => 'includes/analyzerViews.inc',
    'access arguments' => array('administer site configuration'),
    'type' => MENU_CALLBACK,
  );
  $items['metadata_analyzer/populateSearchReplace'] = array(
    'title' => 'Collection Element Analysis Results',
    'page callback' => 'islandora_metadata_analyzer_populate_form',
    'page arguements' => array(1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  
  $items['islandora_metadata_analyzer/ajax-path'] = array(
    'title' => 'Get data element at this path',
    'page callback' => 'islandora_metadata_analyzer_path_ajax',
    'access callback' => TRUE,
    'file' => 'includes/ajax.inc',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['islandora_metadata_analyzer/ajax-data'] = array(
    'title' => 'Get pids of objects that have this data element',
    'page callback' => 'islandora_metadata_analyzer_data_ajax',
    'access callback' => TRUE,
    'file' => 'includes/ajax.inc',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['islandora_metadata_analyzer/downloads'] = array(
    'title' => 'Collection Element Analysis Results',
    'page callback' => 'islandora_metadata_analyzer_download_pids',
    'page arguements' => array(1),
    'file' => 'includes/ajax.inc',
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['islandora_metadata_analyzer/ajax-allpath'] = array(
    'title' => 'Get PIDS that have this path',
    'page callback' => 'islandora_metadata_analyzer_allpath_ajax',
    'access callback' => TRUE,
    'file' => 'includes/ajax.inc',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['islandora_metadata_analyzer/piddownloads'] = array(
    'title' => 'Collection Element Analysis Results',
    'page callback' => 'islandora_metadata_analyzer_download_all_pids',
    'page arguements' => array(1),
    'file' => 'includes/ajax.inc',
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['islandora_metadata_analyzer/ajax-allpathmissing'] = array(
    'title' => 'Get list of PIDS that do not have a path',
    'page callback' => 'islandora_metadata_analyzer_allpath_missing_ajax',
    'access callback' => TRUE,
    'file' => 'includes/ajax.inc',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  $items['islandora_metadata_analyzer/missingpiddownloads'] = array(
    'title' => 'Download list of PIDS missing a path',
    'page callback' => 'islandora_metadata_analyzer_download_all_missing_pids',
    'page arguements' => array(1),
    'file' => 'includes/ajax.inc',
    'access callback' => TRUE,
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );
  return $items;
}



/*
 * implements hook_theme
 *
 * Theme functions for output
 *
 */
function islandora_metadata_analyzer_theme($existing, $type, $theme, $path) {
    return array(
        'results_list' => array(
            'variables' => array(
              'resultArray' => NULL,
            ),
            'template' => 'theme/islandora-metadata-analyzer-result-list', // do not include .tpl.php
            'path' => drupal_get_path('module', 'islandora_metadata_analyzer'), '/theme',
        ),
        'element_count' => array(
            'variables' => array(
	      'result_id' => NULL,		
              'title' => NULL,
              'pid' => NULL,
              'query_time' => NULL,
              'countArray' => NULL,
              'stream' => NULL,
              'record_count' => NULL,
              'path_data' => NULL,
            ),
            'template' => 'theme/islandora-metadata-analyzer-element-count', // do not include .tpl.php
            'path' => drupal_get_path('module', 'islandora_metadata_analyzer'), '/theme',
        ),
    );
}



/*
 *  stub callback to manipulate and set variables for theme
 */
function template_preprocess_results_list(&$vars) {
  // This variable will be available in the template file as $custom_value

}

/*
 * Implements template_preprocess_hook
 *
 * Unserialize array for theme
 *
 */
function template_preprocess_element_count(&$vars) {

//Add javascript for closing PID views
drupal_add_js(drupal_get_path('module', 'islandora_metadata_analyzer') . '/js/element.js',
  array(
    'group' => JS_THEME,
    'preprocess' => TRUE,
    'scope' => 'footer',
    'weight' => '9999',
  )
);

}



/*
 * implements hook_form()
 * @params $form form_state
 *
 * Form for selecting repair parameters
 *
 */
function islandora_metadata_analyzer_search_replace_form($form, &$form_state){

  $form['metadata_stream'] = array(
    '#type' => 'select',
    '#title' => t('Metadata Stream'),
    '#options' => drupal_map_assoc(array(t('DC'), t('MODS'))),
    '#description' => t('Select the metadata stream to analyze.'),
  );
  $form['path_to_element'] = array(
    '#type' => 'textfield',
    '#size' => 100,
    '#default_value' => '/language/languageTerm@authority=iso639-2b,type=code,',
    '#required' => TRUE,
    '#title' => t('Path to Element'),
  );
  $form['old_data'] = array(
    '#type' => 'textfield',
    '#size' => 60,
    '#default_value' => 'eng',
    '#required' => TRUE,
    '#title' => t('Old Data'),
  );
  $form['new_data'] = array(
    '#type' => 'textfield',
    '#size' => 60,
    '#default_value' => 'dutch',
    '#required' => TRUE,
    '#title' => t('New Data'),
  );
  $form['pid_list'] = array(
    '#type' => 'textfield',
    '#size' => 100,
    '#default_value' => 'islandora:43, islandora:1542',
    '#required' => TRUE,
    '#title' => t('PIDs to Repair'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'submit',
  );

return $form;

}

/*
 * implements hook_submit
 *
 * Collect input and pass to processing functions
 *
 */
function islandora_metadata_analyzer_search_replace_form_submit($form, &$form_state){


$params = array('stream' => $form_state['values']['metadata_stream'], 
                'path' => $form_state['values']['path_to_element'],
                'old_data' => $form_state['values']['old_data'],
                'new_data' => $form_state['values']['new_data'],
                'pid_list' => $form_state['values']['pid_list'],
               );  

module_load_include('inc', 'islandora_metadata_analyzer', 'includes/search_replace');

islandora_metadata_analyzer_search_replace($params);

return $form;

}


/*
 * implements hook_form()
 * @params $form form_state
 *
 * Form for selecting analysis parameters
 *
 */
function islandora_metadata_analyzer_form($form, &$form_state){
  $form['results_link'] = array(
    '#markup' => '<a href="metadata_analyzer/results">View Results</a>',
  );
  $form['result_set_title'] = array(
    '#type' => 'textfield',
    '#size' => 30,
    '#required' => TRUE,
    '#title' => t('Title of result set'),
  );
  $form['metadata_stream'] = array(
    '#type' => 'select',
    '#title' => t('Metadata Stream'),
    '#options' => drupal_map_assoc(array(t('DC'), t('MODS'))),
    '#description' => t('Select the metadata stream to analyze.'),
  );
  $form['collection_pid'] = array(
    '#type' => 'textfield',
    '#size' => 30,
    '#required' => TRUE,
    '#title' => t('PID of collection to analyze'),
  );
  $form['capture_fields'] = array(
    '#type' => 'textarea',
    '#cols' => 128,
    '#rows' => 5,
    '#required' => FALSE,
    '#title' => t('Comma separated list of top level elements to capture'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => 'submit',
  );
return $form;
}

/*
 * hook_validata stub
 *
 */
function islandora_metadata_analyzer_form_validate($form, &$form_state){
  
}

/*
 * implements hook_submit
 *
 * Collect input and pass to processing functions
 *
 */
function islandora_metadata_analyzer_form_submit($form, &$form_state){

$stream = $form_state['values']['metadata_stream'];
$collection_pid = $form_state['values']['collection_pid'];
$result_set_title = $form_state['values']['result_set_title'];
$capture_fields = $form_state['values']['capture_fields'];

$params = array('capture_fields' => $capture_fields, 
                'result_set_title' => $result_set_title, 
                'stream' => $stream, 
                'pid' => $collection_pid);  


module_load_include('inc', 'islandora_metadata_analyzer', 'includes/analyzer');

islandora_metadata_analyzer($params);

return $form;

}



